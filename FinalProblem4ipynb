{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Elena Karlsen-Ayala\n",
    "#Problem Set 4\n",
    "#June 19 2020"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#1.  Describe the data. Write a metadata document that describes the source of the data, \n",
    "#what the data are, what each column is, etc\n",
    "\n",
    "#see info on github!"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#2.  Normalize the data. Write descriptions (words, drawings, or tables are fine--not code at this point) \n",
    "#of the tables you could use to normalize these data. Describe why you chose the normalize the data \n",
    "#in this manner. Include the column names, data types for each column, primary and foreign keys you would use"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "## Since this is a database from iNaturalist I wanted to create a separate table that would store the user login and numbers on a differently table that \n",
    "#would be linked by the ID number on the first table. That way if we wanted just the information regarding the observations we could cross reference which \n",
    "#user imported what by checking the ID number which is unique to each upload. This data is likely already normalized since it is from iNaturalist website\n",
    "#but there are definitely some issues with some of the columns like the description column which includes several observations by user and the place column\n",
    "#which may include something like 'Gainesville, FL near UF campus.' These sorts of issues would be a problem if this were a real database.\n",
    "\n",
    "#Primary Key I would use is the ID which is an integer\n",
    "#observed_on column would be in DATE format\n",
    "#time_observed_at would be in DATETIME format \n",
    "#updated_at would be in DATETIME \n",
    "#url would be in VARCHAR without a character limit\n",
    "#image_url would be in VARCHAR without a character limit\n",
    "#description would be VARCHAR with a 200 character limit\n",
    "#num_identification_agreements would be INTEGER with a 10 digit limit\n",
    "#place_guess would be VARCHAR with a 200 character limit\n",
    "#species_guess and scientific_name would be VARCHAR with a 200 character limit\n",
    "#taxon_id would be an INTEGER  (This would also be my FOREIGN KEY)\n",
    "#latitude and longitude would be INTEGER \n",
    "\n",
    "#user_id would be VARCHAR\n",
    "#user_login would be VARCHAR\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Either directly in sqlite or in Python with SQLAlchemy, write the code needed to define the tables above"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>ID</th>\n",
       "      <th>observed_on</th>\n",
       "      <th>time_observed_at</th>\n",
       "      <th>user_id</th>\n",
       "      <th>user_login</th>\n",
       "      <th>updated_at</th>\n",
       "      <th>url</th>\n",
       "      <th>image_url</th>\n",
       "      <th>description</th>\n",
       "      <th>num_identification_agreements</th>\n",
       "      <th>place_guess</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>species_guess</th>\n",
       "      <th>scientific_name</th>\n",
       "      <th>taxon_id</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3666</td>\n",
       "      <td>11/21/09</td>\n",
       "      <td>2009-11-21 21:34:00 UTC</td>\n",
       "      <td>311</td>\n",
       "      <td>antonyw</td>\n",
       "      <td>2017-03-09 03:01:19 UTC</td>\n",
       "      <td>http://www.inaturalist.org/observations/3666</td>\n",
       "      <td>https://static.inaturalist.org/photos/6774/med...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>Big Basin SP</td>\n",
       "      <td>37.190033</td>\n",
       "      <td>-122.218643</td>\n",
       "      <td>Suillus caerulescens</td>\n",
       "      <td>Suillus caerulescens</td>\n",
       "      <td>63505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>3936</td>\n",
       "      <td>12/19/09</td>\n",
       "      <td>NaN</td>\n",
       "      <td>311</td>\n",
       "      <td>antonyw</td>\n",
       "      <td>2018-01-22 06:31:03 UTC</td>\n",
       "      <td>http://www.inaturalist.org/observations/3936</td>\n",
       "      <td>https://static.inaturalist.org/photos/7486/med...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>2</td>\n",
       "      <td>Sweeney Ridge</td>\n",
       "      <td>37.547028</td>\n",
       "      <td>-122.414475</td>\n",
       "      <td>Suillus caerulescens</td>\n",
       "      <td>Suillus caerulescens</td>\n",
       "      <td>63505</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>8718</td>\n",
       "      <td>11/23/08</td>\n",
       "      <td>2008-11-23 22:26:00 UTC</td>\n",
       "      <td>1</td>\n",
       "      <td>kueda</td>\n",
       "      <td>2018-08-21 17:55:37 UTC</td>\n",
       "      <td>http://www.inaturalist.org/observations/8718</td>\n",
       "      <td>https://static.inaturalist.org/photos/18718/me...</td>\n",
       "      <td>When we found these, I was imagining they were...</td>\n",
       "      <td>2</td>\n",
       "      <td>Salt Point State Park, CA, US</td>\n",
       "      <td>38.574005</td>\n",
       "      <td>-123.296890</td>\n",
       "      <td>Short-stalked Suillus</td>\n",
       "      <td>Suillus brevipes</td>\n",
       "      <td>63496</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>9071</td>\n",
       "      <td>11/25/10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>477</td>\n",
       "      <td>loarie</td>\n",
       "      <td>2018-10-21 12:08:36 UTC</td>\n",
       "      <td>http://www.inaturalist.org/observations/9071</td>\n",
       "      <td>https://static.inaturalist.org/photos/19486/me...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1</td>\n",
       "      <td>Sonoma County, US-CA, US</td>\n",
       "      <td>38.612110</td>\n",
       "      <td>-122.780800</td>\n",
       "      <td>Suillus acidus</td>\n",
       "      <td>Suillus acidus</td>\n",
       "      <td>63497</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>9087</td>\n",
       "      <td>11/25/10</td>\n",
       "      <td>NaN</td>\n",
       "      <td>477</td>\n",
       "      <td>loarie</td>\n",
       "      <td>2018-11-30 16:00:32 UTC</td>\n",
       "      <td>http://www.inaturalist.org/observations/9087</td>\n",
       "      <td>https://static.inaturalist.org/photos/19520/me...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>shiloh ranch regional park</td>\n",
       "      <td>38.527481</td>\n",
       "      <td>-122.746368</td>\n",
       "      <td>Suillus caerulescens</td>\n",
       "      <td>Suillus caerulescens</td>\n",
       "      <td>63505</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     ID observed_on         time_observed_at  user_id user_login  \\\n",
       "0  3666    11/21/09  2009-11-21 21:34:00 UTC      311    antonyw   \n",
       "1  3936    12/19/09                      NaN      311    antonyw   \n",
       "2  8718    11/23/08  2008-11-23 22:26:00 UTC        1      kueda   \n",
       "3  9071    11/25/10                      NaN      477     loarie   \n",
       "4  9087    11/25/10                      NaN      477     loarie   \n",
       "\n",
       "                updated_at                                           url  \\\n",
       "0  2017-03-09 03:01:19 UTC  http://www.inaturalist.org/observations/3666   \n",
       "1  2018-01-22 06:31:03 UTC  http://www.inaturalist.org/observations/3936   \n",
       "2  2018-08-21 17:55:37 UTC  http://www.inaturalist.org/observations/8718   \n",
       "3  2018-10-21 12:08:36 UTC  http://www.inaturalist.org/observations/9071   \n",
       "4  2018-11-30 16:00:32 UTC  http://www.inaturalist.org/observations/9087   \n",
       "\n",
       "                                           image_url  \\\n",
       "0  https://static.inaturalist.org/photos/6774/med...   \n",
       "1  https://static.inaturalist.org/photos/7486/med...   \n",
       "2  https://static.inaturalist.org/photos/18718/me...   \n",
       "3  https://static.inaturalist.org/photos/19486/me...   \n",
       "4  https://static.inaturalist.org/photos/19520/me...   \n",
       "\n",
       "                                         description  \\\n",
       "0                                                NaN   \n",
       "1                                                NaN   \n",
       "2  When we found these, I was imagining they were...   \n",
       "3                                                NaN   \n",
       "4                                                NaN   \n",
       "\n",
       "   num_identification_agreements                    place_guess   latitude  \\\n",
       "0                              2                  Big Basin SP   37.190033   \n",
       "1                              2                  Sweeney Ridge  37.547028   \n",
       "2                              2  Salt Point State Park, CA, US  38.574005   \n",
       "3                              1       Sonoma County, US-CA, US  38.612110   \n",
       "4                              3     shiloh ranch regional park  38.527481   \n",
       "\n",
       "    longitude          species_guess       scientific_name  taxon_id  \n",
       "0 -122.218643   Suillus caerulescens  Suillus caerulescens     63505  \n",
       "1 -122.414475   Suillus caerulescens  Suillus caerulescens     63505  \n",
       "2 -123.296890  Short-stalked Suillus      Suillus brevipes     63496  \n",
       "3 -122.780800         Suillus acidus        Suillus acidus     63497  \n",
       "4 -122.746368   Suillus caerulescens  Suillus caerulescens     63505  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "\n",
    "import pandas as pd\n",
    "from sqlalchemy import create_engine\n",
    "from sqlalchemy import MetaData\n",
    "from sqlalchemy import Table, Column\n",
    "from sqlalchemy import Integer, String\n",
    "from sqlalchemy import sql, select, join, desc\n",
    "\n",
    "\n",
    "# Importing the whole dataset takes >4GB of RAM. To avoid this, let's use just a few columns.\n",
    "columns=['ID','observed_on','time_observed_at','user_id','user_login','updated_at','url','image_url','description','num_identification_agreements','place_guess','latitude','longitude','species_guess','scientific_name','taxon_id']\n",
    "\n",
    "# The usecols argument is a list of columns to import.\n",
    "df=pd.read_csv(\"/ufrc/bsc4452/share/ekarlsenayala/Problem4/Suillus.csv\", usecols=columns)\n",
    "\n",
    "engine = create_engine('sqlite:////ufrc/bsc4452/share/ekarlsenayala/Problem4/Suillus.sqlite')\n",
    "conn = engine.connect()\n",
    "df.head() #check if it worked! "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (<ipython-input-8-07e33460bf9f>, line 3)",
     "output_type": "error",
     "traceback": [
      "\u001b[0;36m  File \u001b[0;32m\"<ipython-input-8-07e33460bf9f>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    CREATE TABLE `Observations` (\u001b[0m\n\u001b[0m           ^\u001b[0m\n\u001b[0;31mSyntaxError\u001b[0m\u001b[0;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "#Code for command line to create tables\n",
    "\n",
    "CREATE TABLE observations (\n",
    "`ID` INTEGER(10) PRIMARY KEY \n",
    ",  `observed_on` DATE NOT NULL DEFAULT '' \n",
    ",  `time_observed_at` DATETIME NOT NULL DEFAULT ''\n",
    ",  `updated_at` DATETIME NOT NULL DEFAULT ''\n",
    ",  `url` VARCHAR NOT NULL DEFAULT ''\n",
    ",  `image_url` VARCHAR NOT NULL DEFAULT ''\n",
    ",  `description` VARCHAR(200) NOT NULL DEFAULT ''\n",
    ",  `num_identification_agreements` INTEGER(10) NOT NULL DEFAULT ''\n",
    ",  `place_guess` VARCHAR(200) NOT NULL DEFAULT ''\n",
    ",  `species_guess` VARCHAR(200) NOT NULL DEFAULT ''\n",
    ",  `scientific_name` VARCHAR(200) NOT NULL DEFAULT ''\n",
    ",  `taxon_id` INTEGER NOT NULL DEFAULT ''\n",
    ",  `latitude` INTEGER NOT NULL DEFAULT ''\n",
    ",  `longitude` INTEGER NOT NULL DEFAULT ''\n",
    "    \n",
    ");\n",
    "\n",
    "CREATE TABLE `users` (\n",
    "  `user_id` VARCHAR NOT NULL DEFAULT '0'\n",
    ",  `user_login` VARCHAR NOT NULL DEFAULT '0'\n",
    "\n",
    ");"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Write the code to load the data into the database. (2pts) Note this is only 2 points! \n",
    "#Don't spend a ton of time on this. If it turns into a headache, don't worry about it"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "##Please note I did this on the command line but I'm putting my commands here\n",
    "\n",
    "sqlite> INSERT INTO 'users' VALUES (24, 'ekarlsenayala');\n",
    "\n",
    "sqlite> INSERT INTO observations (ID, observed_on, time_observed_at, updated_at, url, image_url, description, num_identification_agreements, place_guess, species_guess, scientific_name, taxon_id, latitude, longitude) VALUES (123, '06/19/20', '2020-06-19 12:00:00', '2020-06-19 12:30:00',' http://ilovefungi.org', 'http://doyoulovefungi.org', 'little yellow near pines', 2, 'Gainesville FL', 12.101010, -122.4535666, 'Suillus brevipes', 'Suillus brevipes', 63496);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3.8 (full)",
   "language": "python",
   "name": "python3-3.8-ufrc"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
